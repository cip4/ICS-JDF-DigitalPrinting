# This is the basic workflow to build ICS documentation

name: Release Build
# The VERSION is the main release number i.e. 1.7 or 2.1
env:      
  JDF_VERSION:    '1.7'
  ICS_FILE_NAME:  ICS JDF DigitalPrinting
  CONFIG_FILE:    ICS_JDF_DigitalPrinting.ini

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags:
      - '*'

  workflow_dispatch:
    inputs:
      tags:
        description: 'Manual Run'  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [framemaker-2019]
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout source
        uses: actions/checkout@v2

      # Get the date 
      - name: Get current time/date
        uses: srfrnk/current-time@master
        id: current-time
        with:
          format: YYYYMMDD
      
      # Use the build tag as the document version
      - name: Get build tag
        run: echo "::set-env name=BUILD_TAG::$($env:GITHUB_REF.replace('refs/tags/', ''))"

      # Uses the remote self-host to build the ICS
      - name: Build ICS-Base Specification
        env:
          NOW: "${{ steps.current-time.outputs.formattedTime }}"
          version:      ${{env.BUILD_TAG}}
          filename:     ${{env.ICS_FILE_NAME}} 
          configfile:   ${{env.CONFIG_FILE}}
        run: >
          python Build\specbuilder.py $env:configfile
          "$env:filename $env:version"
          "Release $env:version"
          "Run-$env:GITHUB_RUN_NUMBER"

      # Upload the artifact 
      - name: Upload ICS Specification artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ICS_FILE_NAME }}-artifact
          path: target/*.pdf
          
      # Upload the release
      - name: Upload to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/*.pdf
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true